---
import Card from "./Card/index.astro";
import Button from "./Button.astro";
import { getTranslation } from "../lib/i18n/translations";
import { Icon } from "astro-icon/components";

const currentLang = Astro.cookies.get('language')?.value || 'fr';
const contactTitle = getTranslation('contact.title', currentLang);
---

<Card colSpan="md:col-span-2" rowSpan="md:row-span-2" gradient={5}>
  <div class="h-full md:flex flex-row justify-around items-center relative">
    <div>
      <header class="flex items-center">
        <h2 class="contact-title text-primary text-xl font-bold" data-translation-key="contact.title">{contactTitle}</h2>
      </header>
      <address class="flex flex-col mt-4">
        <h2 class="contact-details text-secondary">{getTranslation('contact.details', currentLang)}</h2>
        <p>judicaelto@protonmail.com</p>
      </address>
    </div>
    <div class="background-secondary hidden md:block w-[1px] h-[80%]"></div>
    <div class="flex flex-col">
      <div class="w-16 h-16 flex items-center justify-center">
        <Button aria-label="email" id="show-contact-form">
          <Icon name="ri:send-plane-fill" class="h-8 w-8" />
          <span class="sr-only">Email</span>
        </Button>
      </div>
    </div>
  </div>
</Card>

<script>
  import { getTranslation } from "../lib/i18n/translations";

  function updateTranslations(lang: string) {
    const titleHeading = document.querySelector('.contact-title');
    const detailsHeading = document.querySelector('.contact-details');

    if (titleHeading) {
      titleHeading.textContent = getTranslation('contact.title', lang);
    }
    if (detailsHeading) {
      detailsHeading.textContent = getTranslation('contact.details', lang);
    }
  }

  // Initialize translations as soon as possible
  const initialLang = localStorage.getItem('language') || document.documentElement.lang || 'fr';
  updateTranslations(initialLang);

  // Update translations when language changes
  window.addEventListener('languagechange', (event) => {
    const lang = (event as CustomEvent).detail.language;
    updateTranslations(lang);
  });

  // Also update translations when the page loads
  document.addEventListener('DOMContentLoaded', () => {
    const currentLang = localStorage.getItem('language') || document.documentElement.lang || 'fr';
    updateTranslations(currentLang);
  });

  // Contact form handling
  const showButton = document.getElementById('show-contact-form');
  const contactForm = document.querySelector('.contact-form-card');

  if (showButton && contactForm) {
    showButton.addEventListener('click', () => {
      contactForm.classList.add('show');
    });

    window.addEventListener('hideContactForm', () => {
      contactForm.classList.remove('show');
    });
  }
</script>

<style>
  .text-secondary {
    color: var(--text-secondary);
  }
  .background-secondary {
    background-color: var(--background-secondary);
  }
</style>
