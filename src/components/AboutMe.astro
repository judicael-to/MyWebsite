---
import Card from "./Card/index.astro";
import { Icon } from "astro-icon/components";
import { getTranslation } from "../lib/i18n/translations";
import Content from "./Card/Content.astro";

const currentLang = Astro.cookies.get('language')?.value || 'fr';
---

<Card colSpan="md:col-span-1" rowSpan="md:row-span-4" gradient={3}>
  <div class="flex flex-col gap-2">
    <div class="text-xl font-bold">
      <Content title="about.title" />
    </div>
    <p class="text-sm font-light">
      <span class="about-tools">{getTranslation('about.tools', currentLang)}</span> :
      <div class="flex flex-wrap gap-2 mt-2">
        <span class="tool-box">
          <Icon name="simple-icons:python" class="inline-block w-4 h-4" />
        </span>
        <span class="tool-box">
          <Icon name="simple-icons:c" class="inline-block w-4 h-4" />
        </span>
        <span class="tool-box">
          <Icon name="simple-icons:postgresql" class="inline-block w-4 h-4" />
        </span>
      </div>
    </p>
    <p class="text-sm font-light">
      <span class="about-passions">{getTranslation('about.passions', currentLang)}</span> :
    </p>
    <ul class="list-disc list-inside">
      <li class="about-passions-coding">{getTranslation('about.passions.coding', currentLang)}</li>
      <li class="about-passions-design">{getTranslation('about.passions.design', currentLang)}</li>
      <li class="about-passions-tennis">{getTranslation('about.passions.tennis', currentLang)}</li>
      <li class="about-passions-music">{getTranslation('about.passions.music', currentLang)}</li>
    </ul>
  </div>
</Card>

<style>
  .tool-box {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.75rem;
    background-color: var(--button-bg);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    box-shadow: 2px 2px 0 var(--shadow-color);
    font-size: 0.875rem;
    transition: all 0.2s ease-in-out;
  }

  .tool-box:hover {
    transform: translateY(-2px);
    box-shadow: 3px 3px 0 var(--shadow-color);
  }

  .tool-box:hover :global(svg) {
    color: var(--shadow-color);
  }
</style>

<script>
  import { getTranslation } from "../lib/i18n/translations";

  function updateTranslations(lang: string) {
    // Get all elements using specific classes
    const title = document.querySelector('.about-title');
    const tools = document.querySelector('.about-tools');
    const passions = document.querySelector('.about-passions');
    
    // Passions list items
    const passionsCoding = document.querySelector('.about-passions-coding');
    const passionsDesign = document.querySelector('.about-passions-design');
    const passionsTennis = document.querySelector('.about-passions-tennis');
    const passionsMusic = document.querySelector('.about-passions-music');

    try {
      if (title) title.textContent = getTranslation('about.title', lang);
      if (tools) tools.textContent = getTranslation('about.tools', lang);
      if (passions) passions.textContent = getTranslation('about.passions', lang);
      
      // Update passions
      if (passionsCoding) passionsCoding.textContent = getTranslation('about.passions.coding', lang);
      if (passionsDesign) passionsDesign.textContent = getTranslation('about.passions.design', lang);
      if (passionsTennis) passionsTennis.textContent = getTranslation('about.passions.tennis', lang);
      if (passionsMusic) passionsMusic.textContent = getTranslation('about.passions.music', lang);
    } catch (error) {
      console.error('Error updating AboutMe translations:', error);
    }
  }

  // Initialize translations as soon as possible
  const initialLang = localStorage.getItem('language') || document.documentElement.lang || 'fr';
  updateTranslations(initialLang);

  // Update translations when language changes
  window.addEventListener('languagechange', (event) => {
    const lang = (event as CustomEvent).detail.language;
    console.log('AboutMe received language change event:', lang);
    updateTranslations(lang);
  });

  // Also update translations when the page loads
  document.addEventListener('DOMContentLoaded', () => {
    const currentLang = localStorage.getItem('language') || document.documentElement.lang || 'fr';
    console.log('AboutMe DOM loaded, updating with language:', currentLang);
    updateTranslations(currentLang);
  });
</script>
