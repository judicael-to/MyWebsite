---
import Card from "./Card/index.astro";
import Button from "./Button.astro";
import { LINKS } from "../lib/constants";
import { Icon } from "astro-icon/components";
import Tooltip from "./Tooltip/index";
import { getTranslation } from "../lib/i18n/translations";
import Content from "./Card/Content.astro";
import MixedFontStyles from "./Card/MixedFontStyles.astro";

const currentLang = Astro.cookies.get('language')?.value || 'fr';
const name = "JUDICAEL";

function wrapWithMixedFontSpans(text: string): string {
  return text.split('').map((char: string, i: number) => {
    const classNum = (i % 26) + 1;
    return `<span class="char${classNum} font-transition" data-char="${char}">${char}</span>`;
  }).join('');
}

const nameHtml = wrapWithMixedFontSpans(name);
---

<Card colSpan="md:col-span-3" rowSpan="md:row-span-4" gradient={1}>
  <div class="flex w-full h-full flex-col md:flex-row">
    <div class="flex flex-col justify-between md:max-h-[300px] gap-4">
      <div class="flex flex-col h-full">
        <div class="flex flex-col gap-2">
          <div class="text-xl font-bold text-primary m-0">
            <Content title="intro.greeting" />
          </div>
          <div class="text-6xl text-primary m-0">
            <MixedFontStyles />
            <div id="judicael-name" class="mixed-font judicael-name" set:html={nameHtml} />
          </div>
        </div>
        <p class="intro-description m-0 font-light text-xl text-primary mt-4">
          {getTranslation('intro.description', currentLang)}
        </p>
      </div>
      <div class="flex gap-4">
        <a href={LINKS.github} aria-label="github profile" target="_blank" class="transition-transform hover:scale-105">
          <Button aria-label="github profile">
            <Icon name="ri:github-fill" class="h-6" />
            <span class="sr-only">GitHub Profile</span>
          </Button>
        </a>
        <a href={LINKS.linkedin} aria-label="linkedin profile" target="_blank" class="transition-transform hover:scale-105">
          <Button aria-label="linkedin profile">
            <Icon name="ri:linkedin-box-fill" class="h-6" />
            <span class="sr-only">Linkedin Profile</span>
          </Button>
        </a>
        <div class="transition-transform hover:scale-105">
          <Tooltip client:visible>
            <Button aria-label="easter egg btn">
              <Icon name="ri:emotion-laugh-line" class="h-6" />
              <span class="sr-only">Easter egg button</span>
            </Button>
          </Tooltip>
        </div>
      </div>
    </div>
    <img
      width="300"
      height="300"
      src="/me.webp"
      class="w-auto max-h-[300px] select-none absolute right-[-110px] bottom-[-20px] z-[-1] opacity-50 md:opacity-100 md:relative md:right-auto md:bottom-auto md:z-auto pointer-events-none"
      alt="memoji of judicael"
    />
  </div>
</Card>

<style>
  .text-secondary {
    color: var(--text-secondary);
  }
  
  .text-primary {
    color: var(--text-primary);
  }
  
  .font-transition {
    transition: color 0.3s ease-in-out;
  }
  
  .judicael-name span {
    display: inline-block;
    position: relative;
    padding: 0 2px;
  }

</style>

<script>
  import { getTranslation } from "../lib/i18n/translations";

  function updateTranslations(lang: string) {
    // Get all elements that need translation using specific class selectors
    const description = document.querySelector('.intro-description');

    try {
      if (description) {
        const descText = getTranslation('intro.description', lang);
        description.textContent = descText;
      }
    } catch (error) {
      console.error('Error updating translations:', error);
    }
  }
</script>